[
  {
    "type": "data",
    "name": "DdSdkConfiguration",
    "documentation": "A configuration object to initialize Datadog's features.",
    "properties": [
      {
        "name": "clientToken",
        "type": "string",
        "documentation": "A valid Datadog client token.",
        "mandatory": true
      },
      {
        "name": "env",
        "type": "string",
        "documentation": "The applicationâ€™s environment, for example: prod, pre-prod, staging, etc.",
        "mandatory": true
      },
      {
        "name": "applicationId",
        "type": "string",
        "documentation": "The RUM application ID.",
        "mandatory": false
      },
      {
        "name": "nativeCrashReportEnabled",
        "type": "boolean",
        "documentation": "Whether the SDK should track native (pure iOS or pure Android) crashes (default is false).",
        "mandatory": false
      },
      {
        "name": "sampleRate",
        "type": "double",
        "documentation": "The sample rate (between 0 and 100) of RUM sessions kept.",
        "mandatory": false
      },
      {
        "name": "site",
        "type": "string",
        "documentation": "The Datadog site of your organization (can be 'US', 'EU' or 'GOV', default is 'US').",
        "mandatory": false
      },
      {
        "name": "trackingConsent",
        "type": "string",
        "documentation": "Consent, which can take one of the following values: 'pending', 'granted', 'not_granted'.",
        "mandatory": false
      },
      {
        "name": "additionalConfig",
        "type": "map",
        "documentation": "Additional configuration parameters.",
        "mandatory": false
      }
    ],
    "exposed": false
  },
  {
    "type": "interface",
    "name": "DdSdk",
    "documentation": "The entry point to initialize Datadog's features.",
    "methods": [
      {
        "name": "initialize",
        "type": "void",
        "documentation": "Initializes Datadog's features.",
        "parameters": [
          {
            "name": "configuration",
            "type": "DdSdkConfiguration",
            "documentation": "The configuration to use."
          }
        ]
      },
      {
        "name": "setAttributes",
        "type": "void",
        "documentation": "Sets the global context (set of attributes) attached with all future Logs, Spans and RUM events.",
        "parameters": [
          {
            "name": "attributes",
            "type": "map",
            "documentation": "The global context attributes."
          }
        ]
      },
      {
        "name": "setUser",
        "type": "void",
        "documentation": "Set the user information.",
        "parameters": [
          {
            "name": "user",
            "type": "map",
            "documentation": "The user object (use builtin attributes: 'id', 'email', 'name', and/or any custom attribute)."
          }
        ]
      },
      {
        "name": "setTrackingConsent",
        "type": "void",
        "documentation": "Set the tracking consent regarding the data collection.",
        "parameters": [
          {
            "name": "trackingConsent",
            "type": "string",
            "documentation": "Consent, which can take one of the following values: 'pending', 'granted', 'not_granted'."
          }
        ]
      }
    ],
    "exposed": false
  },
  {
    "type": "interface",
    "name": "DdLogs",
    "documentation": "The entry point to use Datadog's Logs feature.",
    "methods": [
      {
        "name": "debug",
        "type": "void",
        "documentation": "Send a log with level debug.",
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "documentation": "The message to send."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "info",
        "type": "void",
        "documentation": "Send a log with level info.",
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "documentation": "The message to send."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "warn",
        "type": "void",
        "documentation": "Send a log with level warn.",
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "documentation": "The message to send."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "error",
        "type": "void",
        "documentation": "Send a log with level error.",
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "documentation": "The message to send."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      }
    ],
    "exposed": true
  },
  {
    "type": "interface",
    "name": "DdTrace",
    "documentation": "The entry point to use Datadog's Trace feature.",
    "methods": [
      {
        "name": "startSpan",
        "type": "string",
        "documentation": "Start a span, and returns a unique identifier for the span.",
        "parameters": [
          {
            "name": "operation",
            "type": "string",
            "documentation": "The operation name of the span."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the operation started (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "finishSpan",
        "type": "void",
        "documentation": "Finish a started span.",
        "parameters": [
          {
            "name": "spanId",
            "type": "string",
            "documentation": "The unique identifier of the span."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the operation stopped (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      }
    ],
    "exposed": true
  },
  {
    "type": "interface",
    "name": "DdRum",
    "documentation": "The entry point to use Datadog's RUM feature.",
    "methods": [
      {
        "name": "startView",
        "type": "void",
        "documentation": "Start tracking a RUM View.",
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "documentation": "The view unique key identifier."
          },
          {
            "name": "name",
            "type": "string",
            "documentation": "The view name."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the view started (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "stopView",
        "type": "void",
        "documentation": "Stop tracking a RUM View.",
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "documentation": "The view unique key identifier."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the view stopped (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "startAction",
        "type": "void",
        "documentation": "Start tracking a RUM Action.",
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "documentation": "The action type (tap, scroll, swipe, click, custom)."
          },
          {
            "name": "name",
            "type": "string",
            "documentation": "The action name."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the action started (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "stopAction",
        "type": "void",
        "documentation": "Stop tracking the ongoing RUM Action.",
        "parameters": [
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the action stopped (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "addAction",
        "type": "void",
        "documentation": "Add a RUM Action.",
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "documentation": "The action type (tap, scroll, swipe, click, custom)."
          },
          {
            "name": "name",
            "type": "string",
            "documentation": "The action name."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the action occurred (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "startResource",
        "type": "void",
        "documentation": "Start tracking a RUM Resource.",
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "documentation": "The resource unique key identifier."
          },
          {
            "name": "method",
            "type": "string",
            "documentation": "The resource method (GET, POST, â€¦)."
          },
          {
            "name": "url",
            "type": "string",
            "documentation": "The resource url."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the resource started (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "stopResource",
        "type": "void",
        "documentation": "Stop tracking a RUM Resource.",
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "documentation": "The resource unique key identifier."
          },
          {
            "name": "statusCode",
            "type": "long",
            "documentation": "The resource status code."
          },
          {
            "name": "kind",
            "type": "string",
            "documentation": "The resource's kind (xhr, document, image, css, font, â€¦)."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the resource stopped (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "addError",
        "type": "void",
        "documentation": "Add a RUM Error.",
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "documentation": "The error message."
          },
          {
            "name": "source",
            "type": "string",
            "documentation": "The error source (network, source, console, logger, â€¦)."
          },
          {
            "name": "stacktrace",
            "type": "string",
            "documentation": "The error stacktrace."
          },
          {
            "name": "timestampMs",
            "type": "long",
            "optional": true,
            "defaultValue": {
              "react-native": "Date.now()"
            },
            "documentation": "The timestamp when the error occurred (in milliseconds). If not provided, current timestamp will be used."
          },
          {
            "name": "context",
            "type": "map",
            "optional": true,
            "defaultValue": {
              "react-native": "{}"
            },
            "documentation": "The additional context to send."
          }
        ]
      },
      {
        "name": "addTiming",
        "type": "void",
        "documentation": "Adds a specific timing in the active View. The timing duration will be computed as the difference between the time the View was started and the time this function was called.",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "documentation": "The name of the new custom timing attribute. Timings can be nested up to 8 levels deep. Names using more than 8 levels will be sanitized by SDK."
          }
        ]
      }
    ],
    "exposed": true
  }
]
